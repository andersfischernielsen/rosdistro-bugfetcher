- url: 'https://github.com/PilzDE/pilz_industrial_motion/pull/164'
  title: enable roslint_python
  body: "for better python readability.\r\nAdd test dependency to check it with CI job in the future.\r\nFixed PEP issues with the help of pycharm."
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels: []
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/154'
  title: Guessing parameters
  body: "I have a problem with programming a application effective, because of guessing parameters if the program is not able to execute the move commands. I would request a feature to make programming more usable for industries if the parameters are not important for me but for the program, than the program should use a possible parameter on his own.\r\n\r\ni.e.: LIN movements--> velocity. If i don't give any velocity parameter than i dont care about velocity, the robot should drive as fast as he can.\r\n\r\nIt would help too if the program could recommend me a working parameter, even this is way faster as to step yourself to the right parameter, because in most cases I really don't care about them.\r\n\r\nThis includes:\r\n- LIN-->velocity, acceleration\r\n- Sequence --> Blend radius, acceleration\r\n\r\n\r\n![IMG_0150](https://user-images.githubusercontent.com/44464164/56945037-e3b89e80-6b25-11e9-899a-62ffc5883018.JPG)\r\n![IMG_0151](https://user-images.githubusercontent.com/44464164/56945061-021e9a00-6b26-11e9-8505-4da2ce1fb12c.JPG)\r\n\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - enhancement
    - medium
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/146'
  title: >-
    Trajectory message contains waypoints that are not strictly increasing in
    time.
  body: "### Commit\r\nAt which commit was the issue/bug observed?\r\n\r\n### Steps to reproduce\r\nOn a real robot: Make a sequence, where the second command has a blend radius, e.g.\r\n\r\n    r.move(Ptp(goal=Pose(position=Point(0.0, 0.0, .9), orientation=Quaternion(0,0,0,1)),\r\n                    vel_scale=SLOW_VEL_SCALE,\r\n                    acc_scale=ACC_SCALE))\r\n    seq = Sequence()\r\n    seq.append(Ptp(goal=Pose(position=Point(0.0, 0, .9), orientation=Quaternion(0,0,0,1)),\r\n                    vel_scale=SLOW_VEL_SCALE,\r\n                    acc_scale=ACC_SCALE))\r\n    seq.append(Ptp(goal=Pose(position=Point(0.2, 0, .9), orientation=Quaternion(0,0,0,1)),\r\n                    vel_scale=SLOW_VEL_SCALE,\r\n                    acc_scale=ACC_SCALE),\r\n\t\tblend_radius=0.099)\r\n    seq.append(Ptp(goal=Pose(position=Point(0.2, 0.2, .9), orientation=Quaternion(0,0,0,1)),\r\n                   vel_scale=SLOW_VEL_SCALE,\r\n                   acc_scale=ACC_SCALE),\r\n               blend_radius=0.099)\r\n    seq.append(Ptp(goal=Pose(position=Point(0, 0.2, .9), orientation=Quaternion(0,0,0,1)),\r\n                   vel_scale=SLOW_VEL_SCALE,\r\n                   acc_scale=ACC_SCALE))\r\n    r.move(seq)\r\n\r\ne.g. https://github.com/ct2034/my_pilz_sandbox/blob/627759a2e0a47ac6b08d7f21c259e429f78cf21f/my_pilz_sandbox/scripts/seq.py\r\n\r\n### Expected behavior\r\nRobot executes sequence\r\n\r\n### Observed behavior\r\n`[ERROR] [1555069916.455739612]: Trajectory message contains waypoints that are not strictly increasing in time.`\r\n(This happens to me only on a hardware robot)\r\n\r\n### Reference to test\r\n\r\n- on robot:\r\nhttps://github.com/PilzDE/pilz_industrial_motion/blob/fix/not_srictly_incresaing_in_time/pilz_robot_programming/test/acceptance_tests/acceptance_test_blending.py#L296\r\n\r\n- analyzing trajectories:\r\nhttps://github.com/PilzDE/pilz_industrial_motion/blob/fix/not_srictly_incresaing_in_time/pilz_trajectory_generation/test/integrationtest_command_list_manager.cpp#L207\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
- url: 'https://github.com/PilzDE/pilz_industrial_motion/pull/145'
  title: reduce prbt_support to `<test_depend>`
  body: "The debian package pilz-trajectory-generation currently depends on prbt_support; that should not be necessary.\r\nA test depend should suffice?!"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels: []
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/136'
  title: Synchronize of previously working velocity profile fails
  body: "### Commit\r\nI rebased against kinetic devel. My current commit is: 6dfd8a917c3fc941110450263f900f63cafb803b. Now some of the python tests do not work (e.g. tst_sequence_with_gripper and tst_api_execution_stop). On the console I see that the velocity profiles between certain axis cannot be synchronized.\r\nI found this problem on kinetic-devel (6e3da7394a3f9c02680d5d430c121fd5af283922,  see also [here on Travis](https://api.travis-ci.org/v3/job/515644840/log.txt)) and melodic-devel (7f8ad2bace5765b539b1b076572ead31fbe1d24f, see also [here on Travis](https://api.travis-ci.org/v3/job/516490207/log.txt))\r\n\r\n@martiniil Do you might know why previously working tests suddenly fail?\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
- url: 'https://github.com/PilzDE/pilz_industrial_motion/pull/129'
  title: 'Remove genmsg from ''pilz_msgs'' package: it''s not needed'
  body: "The `genmsg` package is not needed as a dependency of `*_msgs` packages. `message_runtime` and `message_generation` are responsible for pulling in the necessary dependencies.\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels: []
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/128'
  title: 'pilz_command_planner: Rviz Plugin - Movement not possible'
  body: "### Commit (Stand: 19.03.2019):\r\n- kinetic-devel\r\n- pilz_industrial_motion - Version: 0.3.6-0\r\n- pilz_robots -  Version: 0.4.7-0\r\n- prbt_grippers - Version: 0.0.1-0\r\n\r\n### Steps to reproduce\r\nLaunch real robot via:  \r\n```roslaunch prbt_moveit_config moveit_planning_execution.launch sim:=false pipeline:=pilz_command_planner```  \r\nIn Rviz perform the following steps:\r\n1. Select Ptp command.\r\n2. Choose position to move to.\r\n3. Push \"Plan and Execute\" button and wait for robot to complete motion.\r\n4. If \"Plan and Execute\" button is active, after motion is finished, go back to step 2.\r\n\r\n### Expected behavior\r\nAfter motion is finished, it should be possible to plan and execute a new motion.\r\n\r\n### Observed behavior\r\nFor some reason sometimes the \"Plan and Execute\" button remains deactivated. Maybe the Pluging still waits for the motion to finish and has not received the finish signal. On the same day but maybe not in this context I also had problems with a statement like ```PATH_TOLERANCE_VIOLATED```. Maybe it is related? I normally resolved my problems by restarting ROS. The I was often able to again perform one or two Ptp movements until the problem reappeared.\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
    - medium
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/127'
  title: >-
    Blending issue: Trajectory message contains waypoints that are not strictly
    increasing in time
  body: "### Expected behavior\r\nBlended linear motion between two points.\r\n\r\n### Observed behavior\r\nMoveit Error:\r\n[ERROR] [1553595062.866247519]: Trajectory message contains waypoints that are not strictly increasing in time.\r\n\r\n## Description\r\nHello everyone,\r\n\r\nwhen I try to move the robot (Kuka KR16 R1610) using blended linear motion I get the error above by MoveIt. So I checked the trajectory being send to the robot driver (/joint_trajectory_action/goal). The blending trajectory begins at point 203 and ends after 42 points at point 245 (if I understand the Moveit-Log correctly). There are a few things i noticed:\r\n1. The \"time_from_start\" parameter increases constantly at the transition from the first trajectory to the blending trajectory.\r\n2. The \"time_from_start\" parameter is exactly the same for two points at the transition from the blending trajectory to the second trajectory which probably explains the MoveIt error message.\r\n3. Those two points have zero velocity and zero acceleration (which is not the point of blending, I guess)\r\n\r\nI added a few excerpts from the terminal logs and the python program being used.\r\nIf you need any more information I would be happy to give it to you. \r\n\r\nWhen setting the blending radius to zero there is no error and all points can be reached. I tried to use different positions and different radii without success.\r\n\r\nThanks for your help in advance\r\n\r\n### Additional Information\r\n**Moveit Log:**\r\n[ INFO] [1553595062.808083929]: Starting generation of LIN Trajectory!\r\n[ INFO] [1553595062.829076769]: LIN Trajectory with 246 Points generated. Took 20.9675 ms.\r\n[ INFO] [1553595062.830782339]: Starting generation of LIN Trajectory!\r\n[ INFO] [1553595062.848031139]: LIN Trajectory with 246 Points generated. Took 17.2255 ms.\r\n[ INFO] [1553595062.849797059]: Starting generation of LIN Trajectory!\r\n[ INFO] [1553595062.856551729]: LIN Trajectory with 95 Points generated. Took 6.72828 ms.\r\n[ INFO] [1553595062.857332949]: Start trajectory blending using transition window.\r\n[ WARN] [1553595062.857349709]: This signature of isRobotStateEqual is deprecated. Please use the new one in the future.\r\n[ INFO] [1553595062.857379629]: Search for start and end point of blending trajectory.\r\n[ INFO] [1553595062.857513609]: Intersection point of first trajectory found, index: 203\r\n[ INFO] [1553595062.857635549]: Intersection point of second trajectory found, index: 42\r\n[ERROR] [1553595062.866247519]: Trajectory message contains waypoints that are not strictly increasing in time.\r\n\r\n**Python Log**\r\n```\r\n[INFO] [1553595062.754794]: Move: Sequence\r\n[ERROR] [1553595063.078297]: Failure during execution of: Sequence:\r\n[...coordinates and orientation...]\r\nTraceback (most recent call last):\r\n  File \"/home/hutab/hutab_ws/src/pilz_industrial_motion/pilz_robot_programming/examples/kr16_test.py\", line 84, in <module>\r\n    start_program()\r\n  File \"/home/hutab/hutab_ws/src/pilz_industrial_motion/pilz_robot_programming/examples/kr16_test.py\", line 77, in start_program\r\n    r.move(sequence)\r\n  File \"/home/hutab/hutab_ws/src/pilz_industrial_motion/pilz_robot_programming/src/pilz_robot_programming/robot.py\", line 228, in move\r\n    self._move_execution_loop(cmd)\r\n  File \"/home/hutab/hutab_ws/src/pilz_industrial_motion/pilz_robot_programming/src/pilz_robot_programming/robot.py\", line 317, in _move_execution_loop\r\n    raise RobotMoveFailed(\"Failure during execution of: \" + str(cmd))\r\npilz_robot_programming.exceptions.RobotMoveFailed: Failure during execution of: Sequence:\r\n[...coordinates and orientation...]\r\n```\r\n**topic: /joint_trajectory_action/goal**\r\n**Points 202, 203, 204**\r\n```\r\n        positions: [7.593925488436071e-14, -1.5507024864834043, 1.814085449169146, 3.879867859561321e-07, 1.3074128021973346, -2.883150902542115e-07]\r\n        velocities: [-3.1086244689504383e-13, 0.02759764999429315, 0.11736654236833566, -1.7784491303317022e-06, -0.1449615937693105, 1.2724071932407696e-06]\r\n        accelerations: [0.0, 0.0013100016249545376, -0.09087688061404364, 9.614615524245476e-07, 0.08956528286585552, -2.427579160328893e-07]\r\n        effort: []\r\n        time_from_start: \r\n          secs: 2\r\n          nsecs:  10000000\r\n      - \r\n        positions: [7.283063041541027e-14, -1.5504307905977273, 1.8152316667749433, 3.705782708578284e-07, 1.3059949141239195, -2.758173764180495e-07]\r\n        velocities: [-3.1086244689504383e-13, 0.027169588567699243, 0.11462176057972506, -1.740851509830374e-06, -0.141788807341503, 1.249771383616197e-06]\r\n        accelerations: [0.0, -0.042806142659390645, -0.2744781788610595, 3.7597620501328217e-06, 0.31727864278074946, -2.263580962457265e-06]\r\n        effort: []\r\n        time_from_start: \r\n          secs: 2\r\n          nsecs:  20000000\r\n      - \r\n        positions: [6.927791673660977e-14, -1.550163711633907, 1.8163496393544953, 3.535604436637131e-07, 1.3046098874103318, -2.6355948767297716e-07]\r\n        velocities: [-3.552713678800501e-13, 0.02670789638201665, 0.11179725795520401, -1.7017827194115264e-06, -0.1385026713587756, 1.2257888745072356e-06]\r\n        accelerations: [-4.440892098500626e-12, -0.046169218568259396, -0.28245026245210525, 3.906879041884768e-06, 0.3286135982727423, -2.398250910896134e-06]\r\n        effort: []\r\n        time_from_start: \r\n          secs: 2\r\n          nsecs:  30000000\r\n      - \r\n```\r\n**Points 245, 246, 247, 248**\r\n```\r\n        positions: [-3.1086244689504383e-15, -1.5442944096275864, 1.8390054060235241, 1.0266425594839958e-10, 1.2760853302516018, -7.894210513900487e-11]\r\n        velocities: [0.0, 0.0008638215248879533, 0.0030975518777731637, -4.9501264929535425e-08, -0.003961302350807827, 3.805990649010882e-08]\r\n        accelerations: [0.0, -0.07148535256185085, -0.25649769632707375, 4.098157686102605e-06, 0.32797716614130223, -3.1501168515242405e-06]\r\n        effort: []\r\n        time_from_start: \r\n          secs: 2\r\n          nsecs: 440000000\r\n      - \r\n        positions: [-7.105427357601002e-15, -1.5442926179448366, 1.839011829987876, 1.2798368348577409e-16, 1.2760771147518575, -3.712353924600952e-15]\r\n        velocities: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\r\n        accelerations: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\r\n        effort: []\r\n        time_from_start: \r\n          secs: 2\r\n          nsecs: 447078000\r\n      - \r\n        positions: [-1.4210854715202004e-14, -1.544292617945806, 1.8390118299888643, 1.279836835242051e-16, 1.276077114746942, -7.509996963242089e-15]\r\n        velocities: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\r\n        accelerations: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]\r\n        effort: []\r\n        time_from_start: \r\n          secs: 2\r\n          nsecs: 447078000\r\n      - \r\n        positions: [-1.3219741493486481e-05, -1.5442926178506118, 1.8390118298907367, 1.95630454774057e-16, 1.2760771147498753, -1.3219741486805273e-05]\r\n        velocities: [-0.0013219741479275626, 9.519429688964465e-09, -9.812750612070431e-09, 6.7646771249851905e-15, 2.9332092310596636e-10, -0.0013219741479295276]\r\n        accelerations: [-0.13219741479275626, 9.519429688964465e-07, -9.812750612070431e-07, 6.76467712498519e-13, 2.9332092310596636e-08, -0.13219741479295277]\r\n        effort: []\r\n        time_from_start: \r\n          secs: 2\r\n          nsecs: 457078000\r\n      - \r\n```\r\n\r\n\r\n\r\n**Python Program**\r\n```\r\n    sequence.append(Lin(goal=Pose(position=Point(0.851, 0, 1.1), orientation=from_euler(math.radians(180), math.radians(0), math.radians(180))), target_link=\"tool0\", vel_scale=0.1, acc_scale=0.1))\r\n    sequence.append(Lin(goal=Pose(position=Point(0.851, 0.2, 1.1), orientation=from_euler(math.radians(180), math.radians(0), math.radians(180))), target_link=\"tool0\", vel_scale=0.1, acc_scale=0.1), blend_radius=0.02)\r\n    sequence.append(Lin(goal=Pose(position=Point(0.9, 0.2, 1.1), orientation=from_euler(math.radians(180), math.radians(0), math.radians(180))), target_link=\"tool0\", vel_scale=0.1, acc_scale=0.1))\r\n    r.move(sequence)\r\n```"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/123'
  title: 'Circ planning fails when start, center and interim are colinear'
  body: "### Reference to test\r\nSee `unittest_trajectory_generator_circ.test` at  2b96750\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
- url: 'https://github.com/PilzDE/pilz_industrial_motion/pull/117'
  title: update dependencies of trajectory_generation
  body: >-
    * add eigen_conversions as `<run_depend>` to install it at runtime (Closes
    #110)
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels: []
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/115'
  title: Using super in pilz robot programming
  body: "To allow multiple inheritance and dependency injection (e.g. to mock in tests) one should use super to call parents init instead of directly calling it. Additionally **kwargs has to be accepted, otherwise it will throw issues, when using multiple inheritance.\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels: []
- url: 'https://github.com/PilzDE/pilz_industrial_motion/pull/112'
  title: update dependencies of trajectory_generation
  body: "* convert package.xml to format 2 (See http://docs.ros.org/jade/api/catkin/html/howto/format2/migrating_from_format_1.html)\r\n* make eigen_conversions a `<depend>` to install it at runtime (Closes #110)\r\n* drop prbt_ikfast_manipulator_plugin; trajectory_generation runtime packages\r\n  are independent of the robot used and the corresponding moveit_config is\r\n  already listed as test_depend.\r\n* degrade pilz_testutils to `<test_depend>`, since in format 2 this also\r\n  fulfils the dependency to build the test (Reverts 421c8af)\r\n* moveit_commander isn't used in trajectory_generation, move it into\r\n  the _testutils package\r\n* drop message_runtime dependency, sind moveit_msgs etc depend on it\r\n  and install it implicitly"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels: []
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/102'
  title: prbt_base is not default reference_frame
  body: "related: #98\r\n\r\n### Steps to reproduce\r\n1. Modify urdf such that `prbt_base` does not match root-link `world`\r\n2. Execute a ptp pose command without reference frame\r\n\r\n### Expected behavior\r\nRobot should move relative to `prbt_base` frame\r\n\r\n### Observed behavior\r\nRobot moves relative to `world` frame\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/99'
  title: Potential memory leak in path_circle_generator
  body: "https://github.com/PilzDE/pilz_industrial_motion/blob/1657377f87f524401c6b7d2228bd39e9a037043d/pilz_trajectory_generation/src/path_circle_generator.cpp#L42-L58\r\n\r\nand\r\n\r\nhttps://github.com/PilzDE/pilz_industrial_motion/blob/1657377f87f524401c6b7d2228bd39e9a037043d/pilz_trajectory_generation/src/path_circle_generator.cpp#L94-L110\r\n\r\nlook like they could leak..."
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
- url: 'https://github.com/PilzDE/pilz_industrial_motion/pull/96'
  title: Make pilz_testutils build_depend
  body: ''
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels: []
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/95'
  title: Relative movement in sequence is broken
  body: "When using relative motion in a sequence the relative seems to reference to the position before the sequence. This is especially bad when transitioning from non-sequence to sequence since the robot could crash.\r\n\r\n### Commit\r\npilz-robot-programming 0.3.3\r\n\r\n### Steps to reproduce\r\nRun\r\n```\r\n#!/usr/bin/env python\r\n\r\nfrom geometry_msgs.msg import Pose, Point\r\nfrom pilz_robot_programming.robot import *\r\nfrom pilz_robot_programming.commands import *\r\nimport math\r\nimport time\r\n\r\ndef start_program():\r\n    print(\"Executing \" +__file__)\r\n\r\n    #initial variables\r\n    r = Robot('1')\r\n    vel = 0.1\r\n\r\n    orientation_pick = from_euler(0, math.radians(180), math.radians(45))\r\n    \r\n    r.move(Ptp(goal=Pose(position=Point(-0.499, -0.195, 0.3), orientation=orientation_pick), vel_scale = vel, relative=False))\r\n\r\n    print(\"High 1 before: \", r.get_current_pose().position.z)\r\n    r.move(Lin(goal=Pose(position=Point(0,0,-0.05)), vel_scale = vel, relative=True))\r\n    print(\"Low 1: \", r.get_current_pose().position.z)\r\n    r.move(Lin(goal=Pose(position=Point(0,0,0.05)), vel_scale = vel, relative=True))\r\n    print(\"High 1 after: \", r.get_current_pose().position.z)\r\n    \r\n\r\n    seq = Sequence()\r\n    seq.append(Lin(goal=Pose(position=Point(0,0,-0.05)), vel_scale = vel, relative=True))\r\n    seq.append(Lin(goal=Pose(position=Point(0,0,0.05)), vel_scale = vel, relative=True))\r\n    print(\"High 2 before: \", r.get_current_pose().position.z)\r\n    r.move(seq)\r\n    print(\"High 2 after: \", r.get_current_pose().position.z)\r\n\r\nif __name__ == \"__main__\":\r\n    # Init a rosnode\r\n    rospy.init_node('robot_program_node', anonymous=True)\r\n\r\n    start_program()\r\n```\r\n### Expected behavior\r\nThe two seperate LIN should move the robot exactly in the same way like the two LIN in the sequence.\r\n\r\n### Observed behavior\r\nDuring the sequence the robot moves 0.05 down but 0.1 up.\r\n\r\n### Logfiles\r\nOutput of `rostopic echo /sequence_move_group/goal`\r\n[output_goal.txt](https://github.com/PilzDE/pilz_industrial_motion/files/2876024/output_goal.txt)\r\n\r\nOutput in console where program runs:\r\n```\r\nExecuting ./row_pick_place.py\r\n('High 1 before: ', 0.29999482722152604)\r\n('Low 1: ', 0.25003443220807708)\r\n('High 1 after: ', 0.30001076941836813)\r\n('High 2 before: ', 0.30001076941836813)\r\n('High 2 after: ', 0.34993052902416205)\r\n```\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
    - high
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/84'
  title: Undercutting blend trajectory violates acceleration limits
  body: "### Commit\r\nebeaab24df19f23f261076949c4a0e56becac738\r\n\r\nIn the program below the generation of the blending trajectory fails if the blend radius is between 0.02 and 0.07, even though both LINs have been generated successfully.\r\n\r\n### Steps to reproduce\r\nExecute the following program:\r\n\r\n    from geometry_msgs.msg import Point\r\n    from pilz_robot_programming.robot import *\r\n    from pilz_robot_programming.commands import *\r\n    from numpy import linspace\r\n\r\n    __REQUIRED_API_VERSION__ = \"1\"\r\n\r\n\r\n    def start_program():\r\n        print(\"Executing \" + __file__)\r\n\r\n        r = Robot(__REQUIRED_API_VERSION__)\r\n\r\n        n_samples = 10\r\n        radii = linspace(0.01, 0.1, n_samples)\r\n        success = [False] * n_samples\r\n\r\n        for i in range(n_samples):\r\n            # Simple ptp movement\r\n            r.move(Ptp(goal=Pose(position=Point(0.2, 0, 0.7))))\r\n\r\n            # Blend sequence\r\n            blend_sequence = Sequence()\r\n            blend_sequence.append(Lin(goal=Pose(position=Point(0.2, 0.5, 0.7))), blend_radius=radii[i])\r\n            blend_sequence.append(Lin(goal=Pose(position=Point(0.2, 0, 0.8)), vel_scale=0.1))\r\n\r\n            try:\r\n                r.move(blend_sequence)\r\n                success[i] = True\r\n            except RobotMoveFailed:\r\n                pass\r\n            \r\n        for i in range(n_samples):\r\n            print(\"Blend with radius \" + str(radii[i]) + (\" succeeded\" if (success[i]) else \" failed\"))\r\n\r\n\r\n    if __name__ == \"__main__\":\r\n        # Init a ros node\r\n        rospy.init_node('robot_program_node')\r\n\r\n        start_program()\r\n\r\n### Output\r\n\r\n> Blend with radius 0.01 succeeded\r\nBlend with radius 0.02 failed\r\nBlend with radius 0.03 failed\r\nBlend with radius 0.04 failed\r\nBlend with radius 0.05 failed\r\nBlend with radius 0.06 failed\r\nBlend with radius 0.07 failed\r\nBlend with radius 0.08 succeeded\r\nBlend with radius 0.09 succeeded\r\nBlend with radius 0.1 succeeded\r\n\r\n### More log\r\n\r\n> [ERROR] [WallTime: 1549608496.828700481 /home/imartini/ros/src/pilz_industrial_motion/pilz_trajectory_generation/src/trajectory_functions.cpp 190]: Joint deceleration limit of prbt_joint_3 violated. Set the acceleration scaling factor lower! Actual joint deceleration is -4.06842, while the limit is -3.49. \r\n[ERROR] [WallTime: 1549608496.828762843 /home/imartini/ros/src/pilz_industrial_motion/pilz_trajectory_generation/src/trajectory_functions.cpp 388]: Inverse kinematics solution of the 5th sample violates the joint velocity/acceleration/deceleration limits.\r\n[ INFO] [WallTime: 1549608496.828794933 /home/imartini/ros/src/pilz_industrial_motion/pilz_trajectory_generation/src/trajectory_blender_transition_window.cpp 83]: Failed to generate joint trajectory for blending trajectory.\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - enhancement
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/72'
  title: Acceptance test Circ failes
  body: "### Commit\r\n0e3b55f5272c7609b3822a937915dafcb5ac7070\r\n\r\n### Steps to reproduce\r\nSee `acceptance_test_circ.md`\r\n\r\n### Observed behavior\r\nNearly all commands fail due to joint limits violation or no IK solution.\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/71'
  title: SimpleActionClient error when requesting move in paused state
  body: "### Commit\r\n0e3b55f5272c7609b3822a937915dafcb5ac7070\r\n\r\n### Steps to reproduce\r\nSee `acceptance_test_move_ctrl.py`\r\n\r\n### Observed behavior\r\nAn error is displayed in the test `_test_pause_between_moves`\r\n\r\n### Logfiles\r\n\r\n> [INFO] [WallTime: 1548918997.828340 /home/imartini/ros/src/pilz_industrial_motion/pilz_robot_programming/src/pilz_robot_programming/robot.py 245]: Pause called.\r\n[INFO] [WallTime: 1548918997.828578 /home/imartini/ros/src/pilz_industrial_motion/pilz_robot_programming/src/pilz_robot_programming/move_control_request.py 98]: Switching state from NO_REQUEST to PAUSE_REQUESTED\r\n[INFO] [WallTime: 1548918997.829016 /home/imartini/ros/src/pilz_industrial_motion/pilz_robot_programming/src/pilz_robot_programming/robot.py 208]: Move: Ptp\r\n[INFO] [WallTime: 1548918997.829279 /home/imartini/ros/src/pilz_industrial_motion/pilz_robot_programming/src/pilz_robot_programming/robot.py 307]: start wait for resume\r\n[ERROR] [WallTime: 1548918997.979876 /opt/ros/kinetic/lib/python2.7/dist-packages/actionlib/simple_action_client.py 237]: Received comm state PREEMPTING when in simple state DONE with SimpleActionClient in NS /sequence_move_group\r\n[INFO] [WallTime: 1548919002.829566 /home/imartini/ros/src/pilz_industrial_motion/pilz_robot_programming/src/pilz_robot_programming/robot.py 259]: Resume called.\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
- url: 'https://github.com/PilzDE/pilz_industrial_motion/issues/70'
  title: Robot goes full circle if circ command is repeated
  body: "### Commit\r\n0e3b55f5272c7609b3822a937915dafcb5ac7070\r\n\r\n### Steps to reproduce\r\nSee `acceptance_test_goal_already_reached.py`\r\n\r\n### Expected behavior\r\nWe expect the following error: `Failed to create path object for circle. Circle : Plane for motion is not properly defined.`\r\n\r\n### Observed behavior\r\nNo failure, robot goes full circle.\r\n"
  repo: 'https://api.github.com/repos/PilzDE/pilz_industrial_motion'
  labels:
    - bug
