- url: 'https://github.com/SICKAG/sick_safetyscanners/pull/2'
  title: 'Update to use ROS standard practices, make node easier to use'
  body: "This pull request includes a number of changes to make the node adhere to ROS standards when applicable.  Feel free to merge these commits separately, or to squash into one commit.\r\n\r\nLet me know if you see any other issues or if something needs follow up or more changes.\r\n\r\nThanks!\r\n\r\nFix 1) Change \"laser_scan_frame_name\" parameter into \"frame_id\" parameter.  \"frame_id\" is a very common parameter name and is used as a convention across many nodes.  Users will be better served by this change.  See:\r\nhttps://github.com/ros-drivers/urg_node/blob/indigo-devel/cfg/URG.cfg#L12\r\nhttps://github.com/ros-drivers/openni_camera/blob/indigo-devel/openni_camera/src/nodelets/driver.cpp#L120\r\n\r\nFix 2) When using the private nodehandle to publish, the node name gets appended to the topic name when published.  So if you called this \"safety_fence_laser_node\", the topic would be \"safety_fence_laser_node/scan\" and when you remap the topic on the command line, you'd have to specify: safety_fence_laser_node/scan:=/my_global_namespace/base_scan\r\n\r\nThis creates a lot of usability problems, so ros nodes publish by default to the default nodehandle (\"\").  This allows easily changing the nodename through launch files or command line.  If having the topic in a namespace is required, this can be done with ROS_NAMESPACE environment variable on the command line or the \"group\" tag in roslaunch with the ns argument.\r\n\r\nFix 3) Follow up to Fix 2, ROS usually uses the shorter name \"scan\" just for convenience.\r\nhttps://github.com/uos/sick_tim/blob/4145d2da0e794f4a39b2a081f250a9a5a4254f62/src/sick_tim_common.cpp#L62\r\n\r\nFix 4) Many sensors have system dependent but roughly constant time latencies for publication data.  When a robot is moving and especially rotating, the timestamp delay from network latency, CPU overhead, or processing delay can cause phase shifts in the laser data and cause blurring/smearing when visualized or used for mapping.  This parameter allows users to set this on their system according to their needs.  Usually is set by dragging the slider in dynamic reconfigure until an approximate time latency is discovered.\r\n\r\nhttps://github.com/uos/sick_tim/blob/4145d2da0e794f4a39b2a081f250a9a5a4254f62/cfg/SickTim.cfg#L48\r\n\r\nFix 5) This one isn't necessary, but is a strong suggestion.  ROS typically uses radians for in message communication and only sometimes in configuration or specification.  Using radians for this value as the ROS interface allows the radians in the launch file to match the radian values in the messages.  Could be useful if nodes read from the same parameters in the ROS parameter server.\r\n\r\nhttp://www.ros.org/reps/rep-0103.html#derived-units\r\n\r\nFix 6) Parameters aren't required to be in dynamic_reconfigure unless they need to be changed during the runtime of the node.  These values aren't able to be changed during runtime, so they shouldn't be in the dynamic_reconfigure settings or appear in the UI.  Since they are only read using standard ROS parameter server API, the defaults can just be hardcoded and dynamic_reconfigure is no longer needed."
  repo: 'https://api.github.com/repos/SICKAG/sick_safetyscanners'
  labels:
    - Merged
