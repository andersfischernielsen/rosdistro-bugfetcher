- url: 'https://github.com/ros-visualization/rqt/issues/195'
  title: rqt on ROS2 - cannot export perspective - 'QtCore' is not defined
  body: "I've launched rqt and I'm getting the following error when I'm trying to save the current layout to a perspective file:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/opt/ros/crystal/lib/python3.6/site-packages/qt_gui/perspective_manager.py\", line 188, in save_settings_completed\r\n    callback(*callback_args)\r\n  File \"/opt/ros/crystal/lib/python3.6/site-packages/qt_gui/perspective_manager.py\", line 399, in _on_export_perspective_continued\r\n    self._convert_values(data, self._export_value)\r\n  File \"/opt/ros/crystal/lib/python3.6/site-packages/qt_gui/perspective_manager.py\", line 423, in _convert_values\r\n    self._convert_values(groups[group], convert_function)\r\n  File \"/opt/ros/crystal/lib/python3.6/site-packages/qt_gui/perspective_manager.py\", line 420, in _convert_values\r\n    keys[key] = convert_function(keys[key])\r\n  File \"/opt/ros/crystal/lib/python3.6/site-packages/qt_gui/perspective_manager.py\", line 460, in _export_value\r\n    reimported = self._import_value(data)\r\n  File \"/opt/ros/crystal/lib/python3.6/site-packages/qt_gui/perspective_manager.py\", line 429, in _import_value\r\n    return QByteArray.fromHex(eval(value['repr(QByteArray.hex)']))\r\n  File \"<string>\", line 1, in <module>\r\nNameError: name 'QtCore' is not defined\r\n```\r\n\r\nP.S. I've opened a question on ROS answers about this but most probably this is a bug, so I'm also reporting here, in case you want to address it at some point (https://answers.ros.org/question/322656/rqt-on-ros2-cannot-export-perspective-qtcore-is-not-defined/)"
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - more-information-needed
- url: 'https://github.com/ros-visualization/rqt/pull/193'
  title: accept array.array and numpy.ndarray
  body: "Fixes #192.\r\n\r\n[![Build Status](https://ci.ros2.org/buildStatus/icon?job=ci_linux&build=6623)](https://ci.ros2.org/job/ci_linux/6623/)\r\n\r\nWhile not necessary for Crystal but only Dashing it doesn't harm being on the `crystal` branch and avoids creating a `dashing` branch."
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - bug
- url: 'https://github.com/ros-visualization/rqt/pull/186'
  title: Adding logic for actions
  body: "This adds support for actions to rqt_py_common. This is necessary to port rqt_action\r\n\r\nIt depends on https://github.com/ros2/rosidl_python/pull/21"
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels: []
- url: 'https://github.com/ros-visualization/rqt/issues/183'
  title: 'ros2: cannot click the menus on macOS until switching windows'
  body: "Testing a release candidate of ROS 2 Crystal on macOS, and I just run rqt, but after it opens I cannot click the menu bar (never seen this before in other applications on my mac). If I wait a long time it still is not possible to clicking. However, if I change applications and then change back again I can access the menu bars \U0001F643.\r\n\r\nHere's a gif:\r\n\r\n![giphy](https://user-images.githubusercontent.com/100427/49976372-71d51500-fef6-11e8-815b-1e4f4bb2082f.gif)\r\n"
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - OSX
    - bug
- url: 'https://github.com/ros-visualization/rqt/issues/182'
  title: 'ros2: rqt --list-plugins sometimes segfaults'
  body: "I'm testing a ROS 2 Crystal release candidate on macOS (building from source), and I sometimes get:\r\n\r\n```\r\n$ rqt --list-plugins\r\nrqt_console.console.Console\r\nrqt_msg.messages.Messages\r\nrqt_plot.plot.Plot\r\nrqt_publisher.publisher.Publisher\r\nrqt_py_console.py_console.PyConsole\r\nrqt_service_caller.service_caller.ServiceCaller\r\nrqt_shell.shell.Shell\r\nrqt_srv.services.Services\r\nrqt_top.top_plugin.Top\r\nSegmentation fault: 11\r\n```\r\n\r\nI've been trying to reproduce it in the debugger, but I haven't been able to do so thus far. I'll keep trying for that or a core file.\r\n\r\nAlso, in the debugger I get this, though I don't know if it's related or even in rqt (maybe inside PyQt?):\r\n\r\n```\r\n(lldb) r\r\nProcess 19243 launched: '/private/tmp/crystal_testing/source_connext/env/bin/python3' (x86_64)\r\n2018-12-13 16:23:53.683401-0800 python3[19243:20649651] dynamic_cast error 2: One or more of the following type_info's  has hidden visibility.  They should all have public visibility.   N10qt_gui_cpp14PluginProviderE, N11rqt_gui_cpp20RosCppPluginProviderE, N10qt_gui_cpp6PluginE.\r\nrqt_console.console.Console\r\nrqt_msg.messages.Messages\r\nrqt_plot.plot.Plot\r\nrqt_publisher.publisher.Publisher\r\nrqt_py_console.py_console.PyConsole\r\nrqt_service_caller.service_caller.ServiceCaller\r\nrqt_shell.shell.Shell\r\nrqt_srv.services.Services\r\nrqt_top.top_plugin.Top\r\nProcess 19243 exited with status = 0 (0x00000000)\r\n```"
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - OSX
    - bug
- url: 'https://github.com/ros-visualization/rqt/issues/181'
  title: 'ros2: Destroying subscriptions from a separate thread crashes python rqt_gui'
  body: "There is something not thread safe about creating a subscription in a rclpy plugin and then destroying it later in the same plugin. This was the stacktrace when python crashed.\r\n\r\nThis is currently reproducible in rqt_plot by subscribing to a topic and then deleting the subscriber. \r\n```\r\nThread 7 Crashed:: RclpySpinner\r\n0   librmw_fastrtps_shared_cpp.dylib\t0x000000011c06747e SubListener::hasData() + 126\r\n1   librmw_fastrtps_shared_cpp.dylib\t0x000000011c067213 check_wait_set_for_data(rmw_subscriptions_t const*, rmw_guard_conditions_t const*, rmw_services_t const*, rmw_clients_t const*) + 115\r\n2   librmw_fastrtps_shared_cpp.dylib\t0x000000011c068a97 rmw_fastrtps_shared_cpp::__rmw_wait(rmw_subscriptions_t*, rmw_guard_conditions_t*, rmw_services_t*, rmw_clients_t*, rmw_wait_set_t*, rmw_time_t const*)::$_0::operator()() const + 39\r\n3   librmw_fastrtps_shared_cpp.dylib\t0x000000011c068b0f bool std::__1::condition_variable::wait_until<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> >, rmw_fastrtps_shared_cpp::__rmw_wait(rmw_subscriptions_t*, rmw_guard_conditions_t*, rmw_services_t*, rmw_clients_t*, rmw_wait_set_t*, rmw_time_t const*)::$_0>(std::__1::unique_lock<std::__1::mutex>&, std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1l, 1000000000l> > > const&, rmw_fastrtps_shared_cpp::__rmw_wait(rmw_subscriptions_t*, rmw_guard_conditions_t*, rmw_services_t*, rmw_clients_t*, rmw_wait_set_t*, rmw_time_t const*)::$_0) + 95\r\n4   librmw_fastrtps_shared_cpp.dylib\t0x000000011c068051 rmw_fastrtps_shared_cpp::__rmw_wait(rmw_subscriptions_t*, rmw_guard_conditions_t*, rmw_services_t*, rmw_clients_t*, rmw_wait_set_t*, rmw_time_t const*) + 2561\r\n5   librmw_fastrtps_cpp.dylib     \t0x000000011c005dcd rmw_wait + 61\r\n6   librmw_implementation.dylib   \t0x00000001097a4fa4 rmw_wait + 132\r\n7   librcl.dylib                  \t0x00000001096ecf71 rcl_wait + 2465\r\n8   _rclpy.cpython-37m-darwin.so  \t0x00000001096be838 rclpy_wait + 200\r\n9   org.python.python             \t0x0000000108bc420f _PyMethodDef_RawFastCallKeywords + 236\r\n10  org.python.python             \t0x0000000108bc38af _PyCFunction_FastCallKeywords + 44\r\n11  org.python.python             \t0x0000000108c59b2b call_function + 636\r\n12  org.python.python             \t0x0000000108c52771 _PyEval_EvalFrameDefault + 7016\r\n13  org.python.python             \t0x0000000108bcf4bf gen_send_ex + 242\r\n14  org.python.python             \t0x0000000108c4f111 builtin_next + 99\r\n15  org.python.python             \t0x0000000108bc4313 _PyMethodDef_RawFastCallKeywords + 496\r\n16  org.python.python             \t0x0000000108bc38af _PyCFunction_FastCallKeywords + 44\r\n17  org.python.python             \t0x0000000108c59b2b call_function + 636\r\n18  org.python.python             \t0x0000000108c5280f _PyEval_EvalFrameDefault + 7174\r\n19  org.python.python             \t0x0000000108c5a432 _PyEval_EvalCodeWithName + 1835\r\n20  org.python.python             \t0x0000000108bc3874 _PyFunction_FastCallKeywords + 225\r\n21  org.python.python             \t0x0000000108c59ba0 call_function + 753\r\n22  org.python.python             \t0x0000000108c528b5 _PyEval_EvalFrameDefault + 7340\r\n23  org.python.python             \t0x0000000108c5a432 _PyEval_EvalCodeWithName + 1835\r\n24  org.python.python             \t0x0000000108bc3874 _PyFunction_FastCallKeywords + 225\r\n25  org.python.python             \t0x0000000108c59ba0 call_function + 753\r\n26  org.python.python             \t0x0000000108c528b5 _PyEval_EvalFrameDefault + 7340\r\n27  org.python.python             \t0x0000000108bc3c8a function_code_fastcall + 112\r\n28  org.python.python             \t0x0000000108bc460d _PyObject_Call_Prepend + 150\r\n29  org.python.python             \t0x0000000108bc39bd PyObject_Call + 136\r\n30  sip.so                        \t0x000000010a58a122 call_method + 76\r\n31  sip.so                        \t0x000000010a585f78 sip_api_call_procedure_method + 152\r\n32  QtCore.so                     \t0x0000000109de42e4 sipQThread::run() + 84\r\n33  org.qt-project.QtCore         \t0x0000000109fea75e 0x109fbc000 + 190302\r\n34  libsystem_pthread.dylib       \t0x00007fff5af87661 _pthread_body + 340\r\n35  libsystem_pthread.dylib       \t0x00007fff5af8750d _pthread_start + 377\r\n36  libsystem_pthread.dylib       \t0x00007fff5af86bf9 thread_start + 13\r\n```"
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - bug
- url: 'https://github.com/ros-visualization/rqt/pull/179'
  title: fix install destination of plugin.xml
  body: >-
    The expected location is
    [${prefix}/plugin.xml](https://github.com/ros-visualization/rqt/blob/fd794145d06310cb8ab44d247e8b63b2ccca4bb8/rqt_gui_py/package.xml#L25)
    - not in a `resource` subdirectory.
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - bug
- url: 'https://github.com/ros-visualization/rqt/pull/175'
  title: remove undeclared dependency on std_srvs
  body: 'Replaces #174.'
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - bug
- url: 'https://github.com/ros-visualization/rqt/pull/174'
  title: Adding test dependency
  body: >-
    One of the recently added tests depends on std_srvs. This updates the
    package.xml to include it.
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels: []
- url: 'https://github.com/ros-visualization/rqt/pull/158'
  title: Get field types
  body: "This pr includes #155 \r\n\r\nNew commit: 3b61b6e\r\n\r\nThis implements the get_field_type method.\r\nThis also causes the rqt_py_common package to depend on ros2cli packages to make use of the daemon node for getting topics and message types. Ideally this functionality will get split out of ros2cli in the future so that the RQT package no longer depends on a cli package. \r\n\r\nhttps://ci.ros2.org/job/ci_linux/5512/"
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels: []
- url: 'https://github.com/ros-visualization/rqt/issues/130'
  title: rqt Segmentation fault since update ubuntu 16.04 + ROS kinetic
  body: "I use ubuntu 16.04 and ROS kinetic.\r\nA few days ago rqt was updated by sudo apt-get update.\r\n\r\nSince then I believe all rqt plugins/ applications fail due to \r\n`Segmentation fault`\r\n\r\nI guess it might be due to python-pyqt4 vs python-pyqt5 dependencies.\r\nI tried to remove python-pyqt4 and install python-pyqt5 to fix this.\r\n\r\n`sudo apt-get install python-pyqt5`\r\n`sudo apt-get remove python-pyqt4`\r\n\r\nI guess this didn't work like I wanted. :(\r\n\r\nThis Script:\r\n\r\n`from PyQt4.QtCore import QT_VERSION_STR\r\nfrom PyQt4.pyqtconfig import Configuration\r\nprint(\"Qt version:\", QT_VERSION_STR)\r\ncfg = Configuration()\r\nprint(\"SIP version:\", cfg.sip_version_str)\r\nprint(\"PyQt version:\", cfg.pyqt_version_str)\r\n`\r\n\r\n(formatting didn't work here,sry!)\r\nreturns:\r\n\r\n`('Qt version:', '4.8.7')\r\n('SIP version:', '4.18')\r\n('PyQt version:', '4.11.4')\r\n` \r\n\r\n"
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - duplicate
- url: 'https://github.com/ros-visualization/rqt/issues/126'
  title: QXcbConnection
  body: "Hi.\r\nSorry for posting this as in issue in Github. I couldn't on ROS Answers as it's apparently down.\r\nSo, I'm learning ROS for a college project and I'm running Ubuntu 16.04 off Windows Subsystem for Linux as I'm not allowed to dual-boot my laptop. I don't have a spare machine lying around, so I'm running like this.\r\nNow the problem is that when I run `rqt`, I'm getting an error stating:\r\n`QXcbConnection: Could not connect to display :0`\r\nOn running `sudo apt-get install ros-lunar-rqt`, I get:\r\n`Reading package lists... Done`\r\n`Building dependency tree`\r\n`Reading state information... Done`\r\n`ros-lunar-rqt is already the newest version (0.5.0-0xenial-20171120-112204-0800).`\r\n`0 upgraded, 0 newly installed, 0 to remove and 127 not upgraded.`\r\nSo, any help on how to get it running?\r\nI'm running Xming as the X-Server."
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels: []
- url: 'https://github.com/ros-visualization/rqt/issues/123'
  title: rqt perspective saves window size in a resolution dependent manner
  body: "I believe that window resolution is being saved dependent on the current window size. It would make much more sense to save the window size in absolute pixels instead.\r\n\r\nSteps to reproduce:\r\n1. Run a fresh rqt gui instance with `--clear-config`\r\n2. Add 2 plugins (Image view and Robot Steering), and resize the window to roughly a quarter of your screen. My screen looks as follows (dual screen at 1920 x 1080):\r\n![1920x1080](https://user-images.githubusercontent.com/1686279/28544167-fe9281a2-7087-11e7-8316-c542236df944.png)\r\n3. Quit rqt so that whatever config you had was saved as the default config.\r\n4. Re-run rqt normally and ensure that the layout exactly matches prior to quitting the last time.\r\n5. Change your screen resolution to something smaller (I changed mine to 1368 x 768).\r\n6. Re-run rqt.\r\n![1366x768](https://user-images.githubusercontent.com/1686279/28544166-fe7c662e-7087-11e7-8917-f87b130c0daa.png)\r\n\r\nHere, the window should have gotten bigger, however it is still roughly a quarter of my screen. This is problematic, as individual plugins in more complex dashboards shift in weird ways as font size changes. \r\n"
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels: []
- url: 'https://github.com/ros-visualization/rqt/issues/112'
  title: rqt crashes due to import error on kinetic
  body: "Hope this is the right place to report this:\r\n\r\nboth `rosrun rqt_gui rqt_gui` and `rqt` give the following error on typing\r\n\r\n```Traceback (most recent call last):\r\n  File \"/opt/ros/kinetic/bin/rqt\", line 13, in <module>\r\n    sys.exit(main.main())\r\n  File \"/opt/ros/kinetic/lib/python2.7/dist-packages/rqt_gui/main.py\", line 59, in main\r\n    return super(Main, self).main(argv, standalone=standalone, plugin_argument_provider=plugin_argument_provider, plugin_manager_settings_prefix=str(hash(os.environ['ROS_PACKAGE_PATH'])))\r\n  File \"/opt/ros/kinetic/lib/python2.7/dist-packages/qt_gui/main.py\", line 344, in main\r\n    from .container_manager import ContainerManager\r\n  File \"/opt/ros/kinetic/lib/python2.7/dist-packages/qt_gui/container_manager.py\", line 33, in <module>\r\n    from .dock_widget import DockWidget\r\n  File \"/opt/ros/kinetic/lib/python2.7/dist-packages/qt_gui/dock_widget.py\", line 33, in <module>\r\n    from python_qt_binding.QtWidgets import QApplication, QDockWidget\r\nImportError: No module named QtWidgets\r\n```\r\n\r\nSystem context:\r\n\r\n```\r\n$lsb_release -a:\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 16.04.1 LTS\r\nRelease:        16.04\r\nCodename:       xenial\r\n\r\n$rosversion -d\r\nkinetic\r\n\r\n$rosversion rqt_graph\r\n0.4.3\r\n\r\n$rosversion rqt_gui\r\n0.3.1\r\n```\r\nros-kinetic installed via official way, all seems to be up to date. I think this is due to the change from qt4 to qt5 if my googling gave me the right idea?"
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - invalid
- url: 'https://github.com/ros-visualization/rqt/issues/109'
  title: rqt plot (Kinetic) crashes in Ubuntu 16.04
  body: >
    If I open rqt with `rqt` I can use image view etc. But if I try to open a
    plot, nothing happens or I get: Segmentation fault (core dumped) 

    When I run `rosrun rqt_plot rqt_plot` I get the following error:


    Traceback (most recent call last):
      File "/opt/ros/kinetic/lib/rqt_plot/rqt_plot", line 6, in <module>
        from rqt_plot.plot import Plot
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/rqt_plot/plot.py", line 43, in <module>
        from .data_plot import DataPlot
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/rqt_plot/data_plot/**init**.py", line 44, in <module>
        from pyqtgraph_data_plot import PyQtGraphDataPlot
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/rqt_plot/data_plot/pyqtgraph_data_plot.py", line 37, in <module>
        from pyqtgraph import PlotWidget, mkPen, mkBrush
      File "/usr/lib/python2.7/dist-packages/pyqtgraph/**init**.py", line 13, in <module>
        from .Qt import QtGui
      File "/usr/lib/python2.7/dist-packages/pyqtgraph/Qt.py", line 104, in <module>
        from PyQt4 import QtGui, QtCore, uic
    RuntimeError: the PyQt4.QtCore and PyQt5.QtCore modules both wrap the
    QObject class


    This happened on both computers with Ubuntu 16.04 and Kinetic (desktop full)


    Is there a way I can force plot to use just one version?
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - bug
- url: 'https://github.com/ros-visualization/rqt/issues/108'
  title: >-
    additional plugin instances when switching the perspective from the command
    line
  body: >
    I just created two simple perspectives "a" and "b" and added a simple plugin
    instance to each of them ( for example plot and image view ).

    When I use the command line command to switch between them, I get an
    additional plugin instance with every time I switch the perspective. These
    instances cannot even be closed by clicking the X.

    It does not happen when I use the GUI to change the perspective.


    I am running ubuntu 14.04 with ROS indigo if that matters.
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - bug
- url: 'https://github.com/ros-visualization/rqt/issues/107'
  title: Kinetic rqt dependency missing
  body: >
    When running `rosrun rqt_graph rqt_graph` on a fresh install of ROS Kinetic
    (`ros-kinetic-desktop-full/xenial,now 1.3.0-0xenial-20160429-172040-0700
    amd64`) and Ubuntu 16.04 LTS, I get the following error due to a missing
    dependency:


    ```

    RosPluginProvider.load(rqt_graph/RosGraph) exception raised in
    __builtin__.__import__(rqt_graph.ros_graph, [RosGraph]):

    Traceback (most recent call last):
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/rqt_gui/ros_plugin_provider.py", line 77, in load
        module = __builtin__.__import__(attributes['module_name'], fromlist=[attributes['class_from_class_type']], level=0)
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/rqt_graph/ros_graph.py", line 39, in <module>
        from python_qt_binding.QtSvg import QSvgGenerator
    ImportError: No module named QtSvg


    PluginManager._load_plugin() could not load plugin "rqt_graph/RosGraph":

    Traceback (most recent call last):
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/qt_gui/plugin_handler.py", line 99, in load
        self._load()
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/qt_gui/plugin_handler_direct.py", line 54, in _load
        self._plugin = self._plugin_provider.load(self._instance_id.plugin_id, self._context)
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/qt_gui/composite_plugin_provider.py", line 71, in load
        instance = plugin_provider.load(plugin_id, plugin_context)
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/qt_gui/composite_plugin_provider.py", line 71, in load
        instance = plugin_provider.load(plugin_id, plugin_context)
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/rqt_gui_py/ros_py_plugin_provider.py", line 60, in load
        return super(RosPyPluginProvider, self).load(plugin_id, plugin_context)
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/qt_gui/composite_plugin_provider.py", line 71, in load
        instance = plugin_provider.load(plugin_id, plugin_context)
      File "/opt/ros/kinetic/lib/python2.7/dist-packages/rqt_gui/ros_plugin_provider.py", line 83, in load
        raise e
    ImportError: No module named QtSvg

    ```


    Fixed by installing package `python-pyqt5.qtsvg` (default version of Python
    - `Python 2.7.11+`)
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels:
    - duplicate
- url: 'https://github.com/ros-visualization/rqt/issues/105'
  title: 'PySide image not found '
  body: >
    I'm using OS X El Capitan with the ROS Jade installed. When trying to run
    rqt I get the following error:


    ```

    Traceback (most recent call last):
      File "/Users/artemsorokin/ros/install_isolated/bin/rqt", line 13, in <module>
        sys.exit(main.main())
      File "/Users/artemsorokin/ros/install_isolated/lib/python2.7/site-packages/rqt_gui/main.py", line 59, in main
        return super(Main, self).main(argv, standalone=standalone, plugin_argument_provider=plugin_argument_provider, plugin_manager_settings_prefix=str(hash(os.environ['ROS_PACKAGE_PATH'])))
      File "/Users/artemsorokin/ros/install_isolated/lib/python2.7/site-packages/qt_gui/main.py", line 336, in main
        from python_qt_binding import QT_BINDING
      File "/Users/artemsorokin/ros/build_isolated/python_qt_binding/bdist.macosx-10.11-x86_64/egg/python_qt_binding/__init__.py", line 55, in <module>
      File "/Users/artemsorokin/ros/build_isolated/python_qt_binding/bdist.macosx-10.11-x86_64/egg/python_qt_binding/binding_helper.py", line 267, in <module>
      File "/Users/artemsorokin/ros/build_isolated/python_qt_binding/bdist.macosx-10.11-x86_64/egg/python_qt_binding/binding_helper.py", line 95, in _select_qt_binding
    ImportError: Could not find Qt binding (looked for: 'pyqt', 'pyside'):
      ImportError for 'pyqt': dlopen(/usr/local/lib/python2.7/site-packages/sip.so, 2): Symbol not found: _PyUnicodeUCS2_AsASCIIString
      Referenced from: /usr/local/lib/python2.7/site-packages/sip.so
      Expected in: flat namespace
     in /usr/local/lib/python2.7/site-packages/sip.so
      ImportError for 'pyside': dlopen(/usr/local/var/pyenv/versions/2.7.11/lib/python2.7/site-packages/PySide/QtCore.so, 2): Library not loaded: @rpath/libpyside-python2.7.1.2.dylib
      Referenced from: /usr/local/var/pyenv/versions/2.7.11/lib/python2.7/site-packages/PySide/QtCore.so
      Reason: image not found

    ```


    Any ideas?
  repo: 'https://api.github.com/repos/ros-visualization/rqt'
  labels: []
