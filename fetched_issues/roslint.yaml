- url: 'https://github.com/ros/roslint/issues/50'
  title: friendly request for a Kinetic release
  body: "Greetings! I'd love to release xacro into Kinetic, but it depends on roslint. Can you do a Kinetic release? Thanks \U0001F354\U0001F354\U0001F36A\n"
  repo: 'https://api.github.com/repos/ros/roslint'
  labels: []
- url: 'https://github.com/ros/roslint/issues/47'
  title: linter for package.xml and CMakeLists.txt
  body: >
    I think we can share some syntaxes for package.xml.


    like

    _CMakeLists.txt_

    - alphabetical order for msgs and srvs


    _package.xml_

    - alphabetical order for `build_depend` and `run_depend`

    - Order: `buildtool_depend` -> `build_depend` -> `run_depend` ->
    `test_depend`


    Any idea?
  repo: 'https://api.github.com/repos/ros/roslint'
  labels: []
- url: 'https://github.com/ros/roslint/pull/38'
  title: Updated cpplint to the latest version
  body: >
    Latest version sha1: 554223dc5432f9bd67951cde662f7a023c512dec

    URL:
    https://github.com/google/styleguide/tree/554223dc5432f9bd67951cde662f7a023c512dec


    During my own testing, I noticed two extra issues caught.

    1. An unnecessary semi-colon after a `}`

    2. A missing explicit for a class with default arguments


    Obviously, there have been a lot of changes, so the impact will depend on
    the code base, but the it doesn't seem like there are any new major issues
    due to the difference in ROS and Google brace styles.
  repo: 'https://api.github.com/repos/ros/roslint'
  labels: []
- url: 'https://github.com/ros/roslint/pull/37'
  title: Updated pep8 from 1.4.7a0 to 1.6.2
  body: >
    # Changelog

    ## 1.6.2 (2015-02-15)


    Changes:

    - Added check for breaking around a binary operator. (Issue #197, Pull #305)


    Bugs:

    - Restored config_file parameter in process_options(). (Issue #380)

    ## 1.6.1 (2015-02-08)


    Changes:

    - Assign variables before referenced. (Issue #287)


    Bugs:

    - Exception thrown due to unassigned `local_dir` variable. (Issue #377)

    ## 1.6.0 (2015-02-06)


    News:

    - Ian Lee ianlee1521@gmail.com joined the project as a maintainer.


    Changes:

    - Report E731 for lambda assignment. (Issue #277)

    - Report E704 for one-liner def instead of E701.
      Do not report this error in the default configuration. (Issue #277)
    - Replace codes E111, E112 and E113 with codes E114, E115 and E116
      for bad indentation of comments. (Issue #274)
    - Report E266 instead of E265 when the block comment starts with
      multiple `#`. (Issue #270)
    - Report E402 for import statements not at the top of the file. (Issue #264)

    - Do not enforce whitespaces around `**` operator. (Issue #292)

    - Strip whitespace from around paths during normalization. (Issue #339 /
    #343)

    - Update `--format` documentation. (Issue #198 / Pull Request #310)

    - Add `.tox/` to default excludes. (Issue #335)

    - Do not report E121 or E126 in the default configuration. (Issues #256 /
    #316)

    - Allow spaces around the equals sign in an annotated function. (Issue #357)

    - Allow trailing backslash if in an inline comment. (Issue #374)

    - If `--config` is used, only that configuration is processed. Otherwise,
      merge the user and local configurations are merged. (Issue #368 / #369)

    Bug fixes:

    - Don't crash if Checker.build_tokens_line() returns None. (Issue #306)

    - Don't crash if os.path.expanduser() throws an ImportError. (Issue #297)

    - Missing space around keyword parameter equal not always reported, E251.
      (Issue #323)
    - Fix false positive E711/E712/E713. (Issues #330 and #336)

    - Do not skip physical checks if the newline is escaped. (Issue #319)

    - Flush sys.stdout to avoid race conditions with printing. See flake8 bug:
      https://gitlab.com/pycqa/flake8/issues/17 for more details. (Issue #363)
    ## 1.5.7 (2014-05-29)


    Bug fixes:

    - Skip the traceback on "Broken pipe" signal. (Issue #275)

    - Do not exit when an option in `setup.cfg` or `tox.ini`
      is not recognized.
    - Check the last line even if it does not end with a newline. (Issue #286)

    - Always open files in universal newlines mode in Python 2. (Issue #288)

    ## 1.5.6 (2014-04-14)


    Bug fixes:

    - Check the last line even if it has no end-of-line. (Issue #273)

    ## 1.5.5 (2014-04-10)


    Bug fixes:

    - Fix regression with E22 checks and inline comments. (Issue #271)

    ## 1.5.4 (2014-04-07)


    Bug fixes:

    - Fix negative offset with E303 before a multi-line docstring.
      (Issue #269)
    ## 1.5.3 (2014-04-04)


    Bug fixes:

    - Fix wrong offset computation when error is on the last char
      of a physical line. (Issue #268)
    ## 1.5.2 (2014-04-04)


    Changes:

    - Distribute a universal wheel file.


    Bug fixes:

    - Report correct line number for E303 with comments. (Issue #60)

    - Do not allow newline after parameter equal. (Issue #252)

    - Fix line number reported for multi-line strings. (Issue #220)

    - Fix false positive E121/E126 with multi-line strings. (Issue #265)

    - Fix E501 not detected in comments with Python 2.5.

    - Fix caret position with `--show-source` when line contains tabs.

    ## 1.5.1 (2014-03-27)


    Bug fixes:

    - Fix a crash with E125 on multi-line strings. (Issue #263)

    ## 1.5 (2014-03-26)


    Changes:

    - Report E129 instead of E125 for visually indented line with same
      indent as next logical line.  (Issue #126)
    - Report E265 for space before block comment. (Issue #190)

    - Report E713 and E714 when operators `not in` and `is not` are
      recommended. (Issue #236)
    - Allow long lines in multiline strings and comments if they cannot
      be wrapped. (Issue #224).
    - Optionally disable physical line checks inside multiline strings,
      using `# noqa`. (Issue #242)
    - Change text for E121 to report "continuation line under-indented
      for hanging indent" instead of indentation not being a
      multiple of 4.
    - Report E131 instead of E121 / E126 if the hanging indent is not
      consistent within the same continuation block.  It helps when
      error E121 or E126 is in the `ignore` list.
    - Report E126 instead of E121 when the continuation line is hanging
      with extra indentation, even if indentation is not a multiple of 4.

    Bug fixes:

    - Allow the checkers to report errors on empty files. (Issue #240)

    - Fix ignoring too many checks when `--select` is used with codes
      declared in a flake8 extension. (Issue #216)
    - Fix regression with multiple brackets. (Issue #214)

    - Fix `StyleGuide` to parse the local configuration if the
      keyword argument `paths` is specified. (Issue #246)
    - Fix a false positive E124 for hanging indent. (Issue #254)

    - Fix a false positive E126 with embedded colon. (Issue #144)

    - Fix a false positive E126 when indenting with tabs. (Issue #204)

    - Fix behaviour when `exclude` is in the configuration file and
      the current directory is not the project directory. (Issue #247)
    - The logical checks can return `None` instead of an empty iterator.
      (Issue #250)
    - Do not report multiple E101 if only the first indentation starts
      with a tab. (Issue #237)
    - Fix a rare false positive W602. (Issue #34)
  repo: 'https://api.github.com/repos/ros/roslint'
  labels: []
- url: 'https://github.com/ros/roslint/issues/15'
  title: roslint target fails when workspace is not sourced
  body: >
    Running the linters depends on rosrun, which does not work unless you've
    sourced the devel space.


    Unsure if catkin_find fixes this, or if it will just remain an open issue.
  repo: 'https://api.github.com/repos/ros/roslint'
  labels:
    - enhancement
- url: 'https://github.com/ros/roslint/issues/11'
  title: Add option to run linter with tests
  body: >
    For example:


    ```

    roslint_python(src/mypkg/foo.py AS_TEST lint_python)

    ```


    We would create the roslint and roslint_mypkg targets as usual, but also
    create a run_tests_mypkg_lint_python target, depended upon by run_tests. The
    idea would be that you could optionally have the linter check run as part of
    the CI's run_tests build.


    On the implementation side, we should be able to call
    [catkin_run_tests_target](https://github.com/ros/catkin/blob/groovy-devel/cmake/test/tests.cmake#L92)
    to wire it up, though you need to provide xunit xml output for that; that
    aspect of this intersects with #9. (And there may need to be transformation
    stage in there, to coerce the line-by-line output into the requisite XML.)
  repo: 'https://api.github.com/repos/ros/roslint'
  labels: []
- url: 'https://github.com/ros/roslint/issues/10'
  title: pylint too big
  body: >
    This speaks for itself:


    ```

    $ sudo apt-get install pylint

    Reading package lists... Done

    Building dependency tree

    Reading state information... Done

    The following extra packages will be installed:
      blt libdrm-intel1 libdrm-nouveau2 libdrm-radeon1 libfontenc1 libgl1-mesa-dri libgl1-mesa-glx libglapi-mesa libllvm3.2
      libpciaccess0 libtxc-dxtn-s2tc0 libutempter0 libx11-xcb1 libxcb-dri2-0 libxcb-glx0 libxcb-shape0 libxss1 libxtst6 libxv1
      libxxf86dga1 libxxf86vm1 python-egenix-mxdatetime python-egenix-mxtools python-logilab-astng python-logilab-common python-tk
      tcl8.5 tcl8.5-lib tk8.5 tk8.5-lib x11-utils xbitmaps xterm
    Suggested packages:
      blt-demo libglide3 python-egenix-mxdatetime-dbg python-egenix-mxdatetime-doc python-egenix-mxtools-dbg
      python-egenix-mxtools-doc pyro python-unittest2 tix python-tk-dbg tcl-tclreadline mesa-utils xfonts-cyrillic
    Recommended packages:
      libtxc-dxtn0
    The following NEW packages will be installed:
      blt libdrm-intel1 libdrm-nouveau2 libdrm-radeon1 libfontenc1 libgl1-mesa-dri libgl1-mesa-glx libglapi-mesa libllvm3.2
      libpciaccess0 libtxc-dxtn-s2tc0 libutempter0 libx11-xcb1 libxcb-dri2-0 libxcb-glx0 libxcb-shape0 libxss1 libxtst6 libxv1
      libxxf86dga1 libxxf86vm1 pylint python-egenix-mxdatetime python-egenix-mxtools python-logilab-astng python-logilab-common
      python-tk tcl8.5 tcl8.5-lib tk8.5 tk8.5-lib x11-utils xbitmaps xterm
    0 upgraded, 34 newly installed, 0 to remove and 150 not upgraded.

    Need to get 17.1 MB of archives.

    After this operation, 59.7 MB of additional disk space will be used.

    Do you want to continue [Y/n]?

    ```


    There's no way a linter should require 60MB of stuff. The issue is the
    dependency on python-logilab-astng, which brings in all kinds of xwindows
    junk.


    Given #2 as well, I think we should swap out pylint for
    https://pypi.python.org/pypi/pep8
  repo: 'https://api.github.com/repos/ros/roslint'
  labels: []
- url: 'https://github.com/ros/roslint/issues/9'
  title: Store lint output in the build tree
  body: >
    Creating an output file would be useful for users. 


    Such a target should cause the lint command only to run again when its
    dependencies change. 
  repo: 'https://api.github.com/repos/ros/roslint'
  labels: []
- url: 'https://github.com/ros/roslint/issues/6'
  title: Need to resolve <build_depend> rosdep keys
  body: >
    There are currently no rosdep keys defined for **python-pylint** or
    **python-cpplint**, which are needed to resolve the **roslint** package
    build dependencies.


    Plus, these probably need to use the transitive `<run_depend>` instead,
    since they are needed at build time by packages that depend on **roslint**.
    (With package format 2, that will become a `<build_export_depend>`, see the
    [rep-0140
    draft](http://farnsworth.csres.utexas.edu/reps/rep-0140.html#build-export-depend-multiple)).
  repo: 'https://api.github.com/repos/ros/roslint'
  labels: []
- url: 'https://github.com/ros/roslint/issues/3'
  title: Scheme for silencing warnings/errors
  body: >
    Especially important for:

    - situations where a warning is acknowledged, but not actually valid.

    - maintainers who don't have the resources to clean everything up now, but
    would like to broadly enforce no new violations, particularly in conjunction
    with using Travis to pre-screen PRs.
  repo: 'https://api.github.com/repos/ros/roslint'
  labels: []
