- url: 'https://github.com/ros-industrial/ros_canopen/issues/327'
  title: Bloom integration process
  body: "Hi,\r\n\r\nwe have built a ROS node for SICK line guidance sensors on top of your driver. We plan to transfer this ROS node to the distribution via the Bloom release process. Our node depends only on the projects \r\nCANopenSocket and ros_canopen. Have you ever done this process before or do you know projects where this process was successfully done?"
  repo: 'https://api.github.com/repos/ros-industrial/ros_canopen'
  labels: []
- url: 'https://github.com/ros-industrial/ros_canopen/issues/324'
  title: Segfault during shutdown
  body: "Sometimes I get a segfault during shutdown of `canopen_motor_node`. I could not really trace it down; please find a screenshot of the ubuntu crash-report attached.\r\n\r\n![canopen-motor-node_crashreport2019-03-18 17-50-09](https://user-images.githubusercontent.com/29709205/54606361-ee264980-4a4b-11e9-811a-5a2de45b0209.png)\r\n\r\nI'll build with DebugSymbols from source and report here, if I can get a backtrace."
  repo: 'https://api.github.com/repos/ros-industrial/ros_canopen'
  labels:
    - bug
- url: 'https://github.com/ros-industrial/ros_canopen/issues/299'
  title: class_loader dependencies error
  body: "Compile this package using the kinetic branch, but I got the `class_loader/class_loader.hpp` not found.\r\n\r\n```sh\r\n/catkin_ws/src/ros_canopen/socketcan_interface/src/socketcan_interface_plugin.cpp:1:42: fatal error: class_loader/class_loader.hpp: No such file or directory\r\ncompilation terminated.\r\nros_canopen/socketcan_interface/CMakeFiles/socketcan_interface_plugin.dir/build.make:62: recipe for target 'ros_canopen/socketcan_interface/CMakeFiles/socketcan_interface_plugin.dir/src/socketcan_interface_plugin.cpp.o' failed\r\nmake[2]: *** [ros_canopen/socketcan_interface/CMakeFiles/socketcan_interface_plugin.dir/src/socketcan_interface_plugin.cpp.o] Error 1\r\nCMakeFiles/Makefile2:444: recipe for target 'ros_canopen/socketcan_interface/CMakeFiles/socketcan_interface_plugin.dir/all' failed\r\n```\r\n\r\nThen\r\n```sh\r\nrosdep install -i -y --from-paths src  --rosdistro kinetic -r\r\n\r\n#All required rosdeps installed successfully\r\n```\r\n\r\nAnd I have installed the system package `ros-kinetic-class-loader`.\r\n\r\nAny help will be appreciated!\r\n\r\n\r\n"
  repo: 'https://api.github.com/repos/ros-industrial/ros_canopen'
  labels: []
- url: 'https://github.com/ros-industrial/ros_canopen/pull/260'
  title: explicitly include iostream to compile with boost >= 1.65.0
  body: "When compiling with boost version >= 1.65.0, it fails with:\r\n```\r\nIn file included from /[...]/include/socketcan_interface/asio_base.h:4:0,\r\n                 from /[...]/include/socketcan_interface/socketcan.h:4,\r\n                 from /[...]/src/socketcan_interface_plugin.cpp:2:\r\n/[...]/include/socketcan_interface/socketcan.h: In member function 'virtual bool can::SocketCANInterface::enqueue(const can::Frame&)':\r\n/[...]/include/socketcan_interface/interface.h:202:96: error: 'cout' is not a member of 'std'\r\n #define LOG(log) { boost::mutex::scoped_lock _cout_lock(_cout_wrapper::get_cout_mutex()); std::cout << log << std::endl; }\r\n                                                                                                ^\r\n/[...]/include/socketcan_interface/socketcan.h:183:13: note: in expansion of macro 'LOG'\r\n             LOG(\"FAILED \" << ec);\r\n             ^\r\n/[...]/include/socketcan_interface/interface.h:202:96: note: suggested alternative: 'count'\r\n```\r\n\r\nWith boost version < 1.65.0, iostream is probably included by the boost dependencies in the header files; with boost version >= 1.65.0, it is not included anymore and hence leads to this compile error.\r\n\r\nThe issue was identified by the work on meta-ros, the OpenEmbedded layer for ROS [1,2]. It provides a cross-compilation tool chain for ROS packages and its current master version already uses boost version 1.65.1.\r\n\r\n[1] https://github.com/bmwcarit/meta-ros\r\n[2] https://github.com/bulwahn/meta-ros/pull/8\r\n\r\nIdeally, this patch is also backported to the indigo-devel branch."
  repo: 'https://api.github.com/repos/ros-industrial/ros_canopen'
  labels: []
- url: 'https://github.com/ros-industrial/ros_canopen/pull/241'
  title: fix rosdep dependency on kernel headers
  body: 'same as #238 '
  repo: 'https://api.github.com/repos/ros-industrial/ros_canopen'
  labels: []
- url: 'https://github.com/ros-industrial/ros_canopen/issues/240'
  title: Errors with socketcan_bridge debian package
  body: "We get an error running the debian package.\r\n\r\n```bash\r\n$ rosrun socketcan_bridge topic_to_socketcan_node \r\n[ INFO] [1499686326.788331478]: Successfully connected to can0.\r\n/opt/ros/kinetic/lib/socketcan_bridge/topic_to_socketcan_node: symbol lookup error: /opt/ros/kinetic/lib/socketcan_bridge/topic_to_socketcan_node: undefined symbol: _ZN16socketcan_bridge16TopicToSocketCANC1EPN3ros10NodeHandleES3_N5boost10shared_ptrIN3can15DriverInterfaceEEE\r\n```\r\n\r\nWe use the native CAN on the A20-OLinuXino-LIME2-eMMC board. (ARM based).\r\n\r\nVersion of the debian:\r\n```bash\r\n$ dpkg --status ros-kinetic-socketcan-bridge \r\nPackage: ros-kinetic-socketcan-bridge\r\nStatus: install ok installed\r\nPriority: extra\r\nSection: misc\r\nInstalled-Size: 575\r\nMaintainer: Mathias LÃ¼dtke <mathias.luedtke@ipa.fraunhofer.de>\r\nArchitecture: armhf\r\nVersion: 0.7.5-0xenial-20170614-111241-0800\r\nDepends: libboost-system1.58.0, libboost-thread1.58.0, libc6 (>= 2.9), libgcc1 (>= 1:3.5), libstdc++6 (>= 5.2), ros-kinetic-can-msgs, ros-kinetic-roscpp, ros-kinetic-socketcan-interface\r\nDescription: Provides nodes to convert messages from SocketCAN to a ROS Topic and vice versa.\r\nHomepage: http://wiki.ros.org/socketcan_bridge\r\n```\r\n\r\nUnfortunately (and maybe related) socketcan_bridge also does not compile:\r\n```bash\r\nErrors     << socketcan_bridge:symlink /home/noblean/ros/kinetic/system/logs/socketcan_bridge/build.symlink.003.log                                                                                                                          \r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python2.7/dist-packages/catkin_tools/execution/stages.py\", line 174, in function_proxy\r\n    return function(logger, event_queue, *args, **kwargs)\r\n  File \"/usr/lib/python2.7/dist-packages/catkin_tools/jobs/catkin.py\", line 291, in link_devel_products\r\n    source_hash = md5(open(os.path.realpath(source_file)).read().encode('utf-8')).hexdigest()\r\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc8 in position 25: ordinal not in range(128)\r\n\r\nStage `symlink` failed with arguments:\r\n  package: {'package_format': 2, 'exports': [], 'buildtool_export_depends': [], 'exec_depends': [<catkin_pkg.package.Dependency object at 0xb61e3930>, <catkin_pkg.package.Dependency object at 0xb61e3f90>, <catkin_pkg.package.Dependency object at 0xb61e3cc0>], 'name': 'socketcan_bridge', 'filename': '/home/noblean/ros/kinetic/system/src/socketcan_bridge/package.xml', 'replaces': [], 'version_abi': None, 'build_export_depends': [<catkin_pkg.package.Dependency object at 0xb61e3960>, <catkin_pkg.package.Dependency object at 0xb61e39c0>, <catkin_pkg.package.Dependency object at 0xb61e3c60>], 'doc_depends': [], 'test_depends': [<catkin_pkg.package.Dependency object at 0xb61e3c30>, <catkin_pkg.package.Dependency object at 0xb61e3ed0>, <catkin_pkg.package.Dependency object at 0xb61e3900>], 'maintainers': [<catkin_pkg.package.Person object at 0xb62c4350>], 'version': '0.7.5', 'build_depends': [<catkin_pkg.package.Dependency object at 0xb61d81e0>, <catkin_pkg.package.Dependency object at 0xb61d8210>, <catkin_pkg.package.Dependency object at 0xb61d8240>], 'urls': [<catkin_pkg.package.Url object at 0xb62c4410>, <catkin_pkg.package.Url object at 0xb62c4390>, <catkin_pkg.package.Url object at 0xb62c4530>], 'authors': [<catkin_pkg.package.Person object at 0xb62c44b0>], 'licenses': ['BSD'], 'buildtool_depends': [<catkin_pkg.package.Dependency object at 0xb61d8090>], 'conflicts': [], 'description': u'Provides nodes to convert messages from SocketCAN to a ROS Topic and vice versa.'}\r\n  metadata_path: /home/noblean/ros/kinetic/system/.catkin_tools/profiles/default\r\n  devel_manifest_path: /home/noblean/ros/kinetic/system/.catkin_tools/profiles/default/packages/socketcan_bridge\r\n  prebuild: False\r\n  package_path: socketcan_bridge\r\n  dest_devel_path: /home/noblean/ros/kinetic/system/devel\r\n  source_devel_path: /home/noblean/ros/kinetic/system/devel/.private/socketcan_bridge\r\n.............................................................................................................................................................................................................................................\r\nFailed     << socketcan_bridge:symlink           [ Exited with code 3 ]                                                                                                                                                                      \r\nFailed    <<< socketcan_bridge                   [ 2 minutes and 34.2 seconds ]                    \r\n```\r\nCompiling socketcan_interface from source works fine."
  repo: 'https://api.github.com/repos/ros-industrial/ros_canopen'
  labels: []
- url: 'https://github.com/ros-industrial/ros_canopen/pull/238'
  title: fix rosdep dependency on kernel headers
  body: ''
  repo: 'https://api.github.com/repos/ros-industrial/ros_canopen'
  labels: []
