- url: 'https://github.com/cra-ros-pkg/robot_localization/issues/434'
  title: Failed to build robot localization code by sourcing  head/master ros2 branch
  body: "Required Info:\r\n    Operating System: Ubuntu 18.04 \r\n    ROS2 :- master/head branch\r\n\r\nBug report:- \r\nI had imported ros2 branch of robot localization (https://github.com/cra-ros-pkg/robot_localization/tree/ros2)\r\nand tried to build by sourcing ros2 latest release branch (as per migration guide),it worked fine.\r\nBut when I try to build the same by sourcing master/head branch of ros2, colcon build failed throwing below errors.\r\n\r\nError Info:- \r\n\r\n> /home/user/master-try-RL/src/robot_localization/src/ros_filter.cpp: In constructor ‘robot_localization::RosFilter::RosFilter(rclcpp::Node::SharedPtr, robot_localization::FilterBase::UniquePtr&)’:\r\n> /home/user/master-try-RL/src/robot_localization/src/ros_filter.cpp:74:30: error: no matching function for call to ‘tf2_ros::Buffer::Buffer()’\r\n>      filter_(std::move(filter))\r\n>                               ^\r\n> In file included from /home/user/master-try-RL/src/robot_localization/include/robot_localization/ros_filter_utilities.hpp:39:0,\r\n>                  from /home/user/master-try-RL/src/robot_localization/src/ros_filter.cpp:35:\r\n> /home/user/master_ros2_ws/install/tf2_ros/include/tf2_ros/buffer.h:65:20: note: candidate: tf2_ros::Buffer::Buffer(rclcpp::Clock::SharedPtr, tf2::Duration, bool)\r\n>      TF2_ROS_PUBLIC Buffer(rclcpp::Clock::SharedPtr clock, tf2::Duration cache_time = tf2::Duration(tf2::BUFFER_CORE_DEFAULT_CACHE_TIME), bool debug = false);\r\n\r\n***********\r\nI suspect that the code should be changed as per the master/head branch of ros2.\r\n\r\nThanks"
  repo: 'https://api.github.com/repos/cra-ros-pkg/robot_localization'
  labels: []
- url: 'https://github.com/cra-ros-pkg/robot_localization/issues/377'
  title: Allow direct integration of GPS data
  body: "Right now, the process for integrating GPS data is, admittedly, a bit convoluted. While the circular dependency between the filter nodes and `navsat_transform_node` is necessary, it creates unnecessary confusion for users. This complex interaction between the nodes could be greatly simplified by just allowing the filters to work with the GPS data directly.\r\n\r\nTo that end, I propose that we add a `gps` sensor input type to the filters, e.g.,\r\n\r\n```\r\ngps0: /your/navsatfix/topic\r\ngps0_config: [true, true, false ...\r\n```\r\nWe can then move many of the `navsat_transform_node` parameters into the filter node configuration."
  repo: 'https://api.github.com/repos/cra-ros-pkg/robot_localization'
  labels:
    - enhancement
